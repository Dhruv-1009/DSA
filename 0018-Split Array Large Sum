class Solution {
private:
    int countstudent(vector<int> vec,int pages,int n)
    {
        int student=1; long long pagecount=0;
        for(int i=0;i<n;i++)
        {
            if(pagecount+vec[i]<=pages)
            {
                pagecount+=vec[i];
            }
            else{
                student++;
                pagecount=vec[i];
            }
        }
        return student;
    }    
public:
    int splitArray(vector<int>& nums, int k) {
        int n=nums.size();
        int low=*max_element(nums.begin(),nums.end());
        int high=accumulate(nums.begin(),nums.end(),0);

        // for(int pages=max;pages<=high;pages++)
        // {
        //     if(countstudent(nums,pages,n)==k)
        //     {
        //         return pages;
        //     }
        // }
        // return -1;
        //int ans=INT_MAX;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            int cntstu=countstudent(nums,mid,n);
            // if(cntstu==k)
            // {
            //     ans=min(ans,mid);
            //     high=low-1;
            // }
            if(cntstu>k) low=mid+1;
            else high=mid-1;
        }
        return low;
       
    }
};
