class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int n=nums1.size();
        int m=nums2.size();

        int i=0,j=0;
        vector<double> vec;
        while(i<n&&j<m)
        {
            if(nums1[i]<nums2[j])
            {
                vec.push_back(nums1[i]);
                i++;
            }
            else{
                vec.push_back(nums2[j]);
                j++;
            }
        }
        while(i!=n)
        {
            vec.push_back(nums1[i]);
            i++;
        }
        while(j!=m)
        {
            vec.push_back(nums2[j]);
            j++;
        }

        if(vec.size()%2==1)
        {
            int i=0;j=vec.size()-1;
            return vec[(i+j)/2];

        }
        else{
            int i=0;j=vec.size()-1;
            int mid=(i+j)/2;
            double ans=(vec[mid]+vec[mid+1])/2;
            return ans;
        }
        return -1;
    }
};
