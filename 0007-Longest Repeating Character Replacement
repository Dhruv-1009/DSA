class Solution {
public:
    int characterReplacement(string s, int k) {
        int n=s.size();
        int maxlen=0;
        //o(n^2)
        for(int i=0;i<n;i++)
        {
            int hash[26]={0},maxf=0;
            for(int j=i;j<n;j++)
            {
                hash[s[j]-'A']++;

                maxf=max(maxf,hash[s[j]-'A']);
                int changes=(j-i+1) - maxf;

                if(changes<=k)
                maxlen=max(maxlen,j-i+1);
                else
                break;
            }
        }
        return maxlen;
        

        //o(n)
        int i=0,j=0;
        int hash[26]={0};
        int maxf=0;
        while(j<n)
        {
            hash[s[j]-'A']++;
            maxf=max(maxf,hash[s[j]-'A']);

            while((j-i+1)-maxf>k)
            {
                hash[s[i]-'A']--;
                maxf=0;
                for(int t=0;t<26;t++)
                {
                    maxf=max(maxf,hash[t]);
                }
                i++;
            }

            if((j-i+1)-maxf<=k)
            {
                maxlen=max(maxlen,j-i+1);
            }
            j++;

        }
        return maxlen;
    }

};
